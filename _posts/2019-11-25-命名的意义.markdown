---
layout:     post
title:      "类加载顺序"
subtitle:   " \"类加载顺序\""
date:       2019-11-25
author:     "Aziz"
header-img: "img/in-post/java/util/concurrent/CopyOnWriteArrayList.jpg"
tags:
    - java
---

> “类加载顺序”

# 前提
在我们讨论命名的时候，我们需要列出以下前提
1. 被命名的代码是需要共同合作的
2. 被命名的代码是需要多次开发，进入版本迭代的
若代码满足以上两者任意一条，则需要对命名进行规范

# 如何执行
## 名副其实
### 变量
对于某个变量而言，名称应正确的表示该变量的含义
例如：
+  主键到实体的Map： id2VOMap
### 方法
对于方法而言，名称应正确的表示该方法所实现的事情
例如：
+ 判断是否存在: isExist
+ 通过id获取实体列表：getVOListById

### 魔法值
对于魔法值而言，应该放入全局静态变量中，标识其含义并给出示意
例如：
+ redis的过期时间： REDIS_EXPIRATE_TIME

需要注意的是，对于值相同，但是含义不同的魔法值，应该要建立多条变量

## 根据上下文设置名称
可以根据当前操作的上下文来设置一个变量的名称，例如：
+ 对于更新数据而言，一个可以是old，一个是new，还有update作为前缀

## 名称的长度
这是一个取舍问题，在尽量表达清楚的同时，名称需要尽量的短。若名称本身已经影响到了对代码的阅读，那么更好的方案应该是缩减命名并添加备注。

# 总接
一切的命名，都是为了更加容易理解而设置的，命名应该是有更好的名称，则马上修改。这个事情本身没有尽善尽美之说，只能在能力范围内尽量通俗易懂的命名。